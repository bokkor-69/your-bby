const axios = require('axios');

const baseApiUrl = async () => {
  return "https://www.noobs-api.rf.gd/dipto";
};

module.exports.config = {
  name: "bby",
  aliases: ["baby", "bbe", "babe"],
  version: "6.9.0",
  author: "dipto",
  countDown: 0,
  role: 0,
  description: "better then all sim simi",
  category: "chat",
  guide: {
    en: "{pn} [anyMessage] OR\nteach [YourMessage] - [Reply1], [Reply2], [Reply3]... OR\nteach [react] [YourMessage] - [react1], [react2], [react3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg [YourMessage] OR\nlist OR \nall OR\nedit [YourMessage] - [NeeMessage]"
  }
};

module.exports.onStart = async ({ api, event, args, usersData }) => {
  const link = `${await baseApiUrl()}/baby`;
  const dipto = args.join(" ").toLowerCase();
  const uid = event.senderID;
  let command, comd, final;

  try {
    if (!args[0]) {
      const ran = ["Bolo baby", "hum", "type help baby", "type !baby hi"];
      return api.sendMessage(ran[Math.floor(Math.random() * ran.length)], event.threadID, event.messageID);
    }

    if (args[0] === 'remove') {
      const fina = dipto.replace("remove ", "");
      const dat = (await axios.get(`${link}?remove=${fina}&senderID=${uid}`)).data.message;
      return api.sendMessage(dat, event.threadID, event.messageID);
    }

    if (args[0] === 'rm' && dipto.includes('-')) {
      const [fi, f] = dipto.replace("rm ", "").split(' - ');
      const da = (await axios.get(`${link}?remove=${fi}&index=${f}`)).data.message;
      return api.sendMessage(da, event.threadID, event.messageID);
    }

    if (args[0] === 'list') {
      if (args[1] === 'all') {
        const data = (await axios.get(`${link}?list=all`)).data;
        const teachers = await Promise.all(data.teacher.teacherList.map(async (item) => {
          const number = Object.keys(item)[0];
          const value = item[number];
          const name = (await usersData.get(number)).name;
          return { name, value };
        }));
        teachers.sort((a, b) => b.value - a.value);
        const output = teachers.map((t, i) => `${i + 1}/ ${t.name}: ${t.value}`).join('\n');
        return api.sendMessage(`Total Teach = ${data.length}\nЁЯСС | List of Teachers of baby\n${output}`, event.threadID, event.messageID);
      } else {
        const d = (await axios.get(`${link}?list=all`)).data.length;
        return api.sendMessage(`Total Teach = ${d}`, event.threadID, event.messageID);
      }
    }

    if (args[0] === 'msg') {
      const fuk = dipto.replace("msg ", "");
      const d = (await axios.get(`${link}?list=${fuk}`)).data.data;
      return api.sendMessage(`Message ${fuk} = ${d}`, event.threadID, event.messageID);
    }

    if (args[0] === 'edit') {
      const command = dipto.split(' - ')[1];
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
      const dA = (await axios.get(`${link}?edit=${args[1]}&replace=${command}&senderID=${uid}`)).data.message;
      return api.sendMessage(`changed ${dA}`, event.threadID, event.messageID);
    }

    if (args[0] === 'teach') {
      if (!dipto.includes(" - ")) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
      
      [comd, command] = dipto.split(' - ');
      final = comd.replace("teach ", "");
      if (command.length < 2) return api.sendMessage('тЭМ | Invalid format!', event.threadID, event.messageID);
      
      const re = await axios.get(`${link}?teach=${final}&reply=${command}&senderID=${uid}`);
      const tex = re.data.message;
      const teacher = (await usersData.get(re.data.teacher)).name;
      return api.sendMessage(`тЬЕ Replies added ${tex}\nTeacher: ${teacher}\nTeachs: ${re.data.teachs}`, event.threadID, event.messageID);
    }

    if (["amar name ki", "amr nam ki", "amar nam ki", "amr name ki", "whats my name"].some(q => dipto.includes(q))) {
      const data = (await axios.get(`${link}?text=amar name ki&senderID=${uid}&key=intro`)).data.reply;
      return api.sendMessage(data, event.threadID, event.messageID);
    }

    const d = (await axios.get(`${link}?text=${dipto}&senderID=${uid}&font=1`)).data.reply;
    const info = await api.sendMessage(d, event.threadID, event.messageID);

    if (info?.messageID) {
      global.GoatBot.onReply.set(info.messageID, {
        commandName: this.config.name,
        type: "reply",
        messageID: info.messageID,
        author: event.senderID,
        d, 
        apiUrl: link
      });
    }

  } catch (e) {
    console.log(e);
    api.sendMessage("Check console for error", event.threadID, event.messageID);
  }
};

module.exports.onReply = async ({ api, event }) => {
  try {
    if (event.type == "message_reply") {
      const a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(event.body?.toLowerCase())}&senderID=${event.senderID}&font=1`)).data.reply;
      const info = await api.sendMessage(a, event.threadID, event.messageID);
      
      if (info?.messageID) {
        global.GoatBot.onReply.set(info.messageID, {
          commandName: this.config.name,
          type: "reply",
          messageID: info.messageID,
          author: event.senderID,
          a
        });
      }
    }  
  } catch (err) {
    api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
  }
};

module.exports.onChat = async ({ api, event }) => {
  try {
    const body = event.body ? event.body.toLowerCase() : "";
    if (["baby", "bby", "janu"].some(prefix => body.startsWith(prefix))) {
      const arr = body.replace(/^\S+\s*/, "");
      const randomReplies = [
        "babu khuda lagseЁЯе║", "Hop bedaЁЯШ╛,Boss ржмрж▓ bossЁЯШ╝", "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзВ ржХрж┐рж╕ ржХрж░рзЗ ржжрзЗржмрзЛЁЯШШ", "ЁЯРТЁЯРТЁЯРТ",
      "bye", "naw message daw m.me/ewr.bokkor", "mb ney bye", "meww", "ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП",
      "ЁЭЧЬ ЁЭЧ╣ЁЭЧ╝ЁЭШГЁЭЧ▓ ЁЭШЖЁЭЧ╝ЁЭШВ__ЁЯШШЁЯШШ", "ЁЭЧЬ ЁЭЧ╡ЁЭЧоЁЭШБЁЭЧ▓ ЁЭШЖЁЭЧ╝ЁЭШВ__ЁЯШПЁЯШП", "ржЧрзЛрж╕рж▓ ржХрж░рзЗ ржЖрж╕рзЛ ржпрж╛ржУЁЯШСЁЯШй", "ржЕрзНржпрж╛рж╕рж▓рж╛ржоржУржпрж╝рж╛рж▓рж┐ржХрзБржо", "ржХрзЗржоржи ржЖрж╕рзЛ",
      "ржмрж▓рзЗржи sir__ЁЯШМ", "ржмрж▓рзЗржи ржорзНржпрж╛ржбрж╛ржо__ЁЯШМ", "ржЖржорж┐ ржЕржирзНржпрзЗрж░ ржЬрж┐ржирж┐рж╕рзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛__ЁЯШПржУржХрзЗ", "ЁЯЩВЁЯЩВЁЯЩВ", "ржПржЯрж╛ржпрж╝ ржжрзЗржЦрж╛рж░ ржмрж╛ржХрж┐ рж╕рж┐рж▓рзЛ_ЁЯЩВЁЯЩВЁЯЩВ",
      "ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧпЁЭЧ╝ЁЭЧ╣ЁЭЧ╣ЁЭЧо ЁЭЧ╜ЁЭЧоЁЭЧ╜ ЁЭЧ╡ЁЭЧ╝ЁЭЧ╢ЁЭЧпЁЭЧ╝,,ЁЯШТЁЯШТ", "ЁЭЧзЁЭЧоЁЭЧ┐ЁЭЧ╜ЁЭЧ╝ЁЭЧ┐ ЁЭЧпЁЭЧ╝ЁЭЧ╣ЁЭЧ╝_ЁЯЩВ", "ЁЭЧХЁЭЧ▓ЁЭШАЁЭЧ╡ЁЭЧ╢ ЁЭЧ▒ЁЭЧоЁЭЧ╕ЁЭЧ╣ЁЭЧ▓ ЁЭЧоЁЭЧ║ЁЭЧ║ЁЭШВ ЁЭЧпЁЭЧ╝ЁЭЧ╕ЁЭЧо ЁЭЧ▒ЁЭЧ▓ЁЭЧпЁЭЧо ЁЭШБЁЭЧ╝__ЁЯе║",
      "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржЬрж╛ржирзБ, ржмрж▓ ЁЯШМ", "ржмрзЗрж╢рж┐ bby Bbby ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБ ЁЯШТЁЯШТ", "__ржмрзЗрж╢рж┐ ржмрзЗржмрж┐ ржмрж▓рж▓рзЗ ржХрж╛ржорзБрж░ ржжрж┐ржорзБ ЁЯднЁЯдн", 
      "ЁЭЩПЁЭЩкЁЭЩвЁЭЩЦЁЭЩз ЁЭЩЬЁЭЩЫ ЁЭЩгЁЭЩЦЁЭЩЮ, ЁЭЩйЁЭЩЦЁЭЩо ЁЭЩЦЁЭЩвЁЭЩа ЁЭЩЩЁЭЩЦЁЭЩаЁЭЩиЁЭЩд? ЁЯШВЁЯШВЁЯШВ", "bolo babyЁЯШТ", "рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐ ржХрзЗржЙ рж╢рзБржирзЗ ржирж╛ ,рждрзЛ ржЖржорж┐ ржХрзЛржирзЛ рж╢рзБржиржмрзЛ ?ЁЯдФЁЯШВ",
      "ржЖржорж┐ рждрзЛ ржЕржирзНржз ржХрж┐ржЫрзБ ржжрзЗржЦрж┐ ржирж╛ЁЯР╕ ЁЯШО", "ржЖржо ржЧрж╛ржЫрзЗ ржЖржо ржирж╛ржЗ ржврж┐рж▓ ржХрзЗржи ржорж╛рж░рзЛ, рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржкрзНрж░рзЗржо ржирж╛ржЗ ржмрзЗржмрж┐ ржХрзЗржи ржбрж╛ржХрзЛ ЁЯШТЁЯлг", "ЁЭЧ╝ЁЭЧ╢ЁЭЧ╢ ржШрзБржорж╛ржирзЛрж░ ржЖржЧрзЗ.! рждрзЛржорж╛рж░ ржоржиржЯрж╛ ржХржерж╛ржпрж╝ рж░рзЗржЦрзЗ ржШрзБржорж╛ржУ.!ЁЯдФ_ржирж╛рж╣ ржорж╛ржирзЗ ржЪрзБрж░рж┐ ржХрж░рждрж╛ржо ЁЯШЮЁЯШШ",
      "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржмрж▓рзЗ ЁЭЧХЁЭЧ╝ЁЭШД ржмрж▓рзЛ ЁЯШШ", "ржжрзВрж░рзЗ ржпрж╛, рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ, рж╢рзБржзрзБ ЁЭЧпЁЭЧпЁЭШЖ ЁЭЧпЁЭЧпЁЭШЖ ржХрж░рж┐рж╕  ЁЯШЙЁЯШЛЁЯдг", "ржПржЗ ржПржЗ рждрзЛрж░ ржкрж░рзАржХрзНрж╖рж╛ ржХржмрзЗ? рж╢рзБржзрзБ ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧпЁЭЧпЁЭШЖ ржХрж░рж┐рж╕ ЁЯШ╛", 
      "рждрзЛрж░рж╛ ржпрзЗ рж╣рж╛рж░рзЗ ЁЭЧХЁЭЧпЁЭШЖ ржбрж╛ржХржЫрж┐рж╕ ржЖржорж┐ рждрзЛ рж╕рждрзНржпрж┐ ржмрж╛ржЪрзНржЪрж╛ рж╣ржпрж╝рзЗ ржпрж╛ржмрзЛ_тШ╣ЁЯШС", "ржЖржЬржм рждрзЛ__ЁЯШТ", "ржЖржорж╛ржХрзЗ ржбрзЗржХрзЛ ржирж╛,ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ЁЯЩЖЁЯП╗тАНтЩАя╕П", "ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рж▓рзЗ ржЪрж╛ржХрж░рж┐ ржерж╛ржХржмрзЗ ржирж╛", 
      "ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржХрж░рзЗ ржЖржорж╛рж░ ржмрж╕ ржорж╛ржирзЗ,bokkor, bokkor ржУ рждрзЛ ржХрж░рждрзЗ ржкрж╛рж░рзЛЁЯШС?", "ржЖржорж╛рж░ рж╕рзЛржирж╛рж░ ржмрж╛ржВрж▓рж╛, рждрж╛рж░ржкрж░рзЗ рж▓рж╛ржЗржи ржХрж┐? ЁЯЩИ", "ЁЯН║ ржПржЗ ржирж╛ржУ ржЬрзБрж╕ ржЦрж╛ржУ..!ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рждрзЗ ржмрж▓рждрзЗ рж╣рж╛ржкрж╛ржпрж╝ ржЧрзЗржЫрзЛ ржирж╛ ЁЯе▓",
      "рж╣ржЯрж╛рзО ржЖржорж╛ржХрзЗ ржоржирзЗ ржкржбрж╝рж▓рзЛ ЁЯЩД", "ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЪрзНржЫрж┐ржЫ,ЁЯШ░ЁЯШ┐", "ржЖржорж┐ рждрзЛржорж╛рж░ рж╕рж┐ржирж┐ржпрж╝рж░ ржЖржкрзБ ржУржХрзЗ ЁЯШ╝рж╕ржорзНржорж╛ржи ржжрзЗржУЁЯЩБ", "ржЦрж╛ржУржпрж╝рж╛ ржжрж╛ржУржпрж╝рж╛ ржХрж░рж╕рзЛ ЁЯЩД", 
      "ржПржд ржХрж╛ржЫрзЗржУ ржПрж╕рзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛ ЁЯЩИ", "ржЖрж░рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗЁЯШТ", "ЁЭЧЫЁЭЧ▓ЁЭШЖ ЁЭЧЫЁЭЧоЁЭЧ╗ЁЭЧ▒ЁЭШАЁЭЧ╝ЁЭЧ║ЁЭЧ▓ ржмрж▓рзЛ ЁЯШБЁЯШБ", "ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи, ржХрзЗржоржи ржЖрж╕рзЛ? ЁЯШЪ",
      "ржПржХржЯрж╛ BF ржЦрзБржБржЬрзЗ ржжрж╛ржУ ЁЯШ┐", "ржлрзНрж░рзЗржирзНржб рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржжрж┐рж▓рзЗ рзл ржЯрж╛ржХрж╛ ржжрж┐ржмрзЛ ЁЯШЧ", "oi mama ar dakis na pilis ЁЯШ┐", "ЁЯРдЁЯРд", "__ржнрж╛рж▓рзЛ рж╣ржпрж╝рзЗ  ржпрж╛ржУ ЁЯШСЁЯШТ",
      "ржПржоржмрж┐ ржХрж┐ржирзЗ ржжрж╛ржУ ржирж╛_ЁЯе║ЁЯе║", "ржУржЗ ржорж╛ржорж╛_ржЖрж░ ржбрж╛ржХрж┐рж╕ ржирж╛ ржкрзНрж▓рж┐ржЬ", "рзйрзи рждрж╛рж░рж┐ржЦ ржЖржорж╛рж░ ржмрж┐ржпрж╝рзЗ ЁЯРд", "рж╣рж╛ ржмрж▓рзЛЁЯШТ,ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?", "ржмрж▓рзЛ ржлрзБрж▓ржЯрзБрж╢рж┐_ЁЯШШ",
      "amr JaNu lagbe,Tumi ki single aso?", "ржЖржорж╛ржХрзЗ ржирж╛ ржжрзЗржХрзЗ ржПржХржЯрзБ ржкржбрж╝рждрзЗржУ ржмрж╕рждрзЗ рждрзЛ ржкрж╛рж░рзЛ ЁЯе║ЁЯе║", "рждрзЛрж░ ржмрж┐ржпрж╝рзЗ рж╣ржпрж╝ ржирж┐ ЁЭЧХЁЭЧпЁЭШЖ рж╣ржЗрж▓рзЛ ржХрж┐ржнрж╛ржмрзЗ,,ЁЯЩД", 
      "ржЖржЬ ржПржХржЯрж╛ ржлрзЛржи ржирж╛ржЗ ржмрж▓рзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐рждрзЗ ржкрж╛рж░рж▓рж╛ржо ржирж╛_ЁЯЩД", "ржЪрзМржзрзБрж░рзА рж╕рж╛рж╣рзЗржм ржЖржорж┐ ржЧрж░рж┐ржм рж╣рждрзЗ ржкрж╛рж░рж┐ЁЯШ╛ЁЯдн -ржХрж┐ржирзНрждрзБ ржмрзЬрж▓рзЛржХ ржирж╛ЁЯе╣ ЁЯШл", "ржЖржорж┐ ржЕржирзНржпрзЗрж░ ржЬрж┐ржирж┐рж╕рзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛__ЁЯШПржУржХрзЗ",
      "ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП", "ржнрзБрж▓рзЗ ржЬрж╛ржУ ржЖржорж╛ржХрзЗ ЁЯШЮЁЯШЮ", "ржжрзЗржЦрж╛ рж╣рж▓рзЗ ржХрж╛ржаржЧрзЛрж▓рж╛ржк ржжрж┐ржУ..ЁЯдЧ", "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝ рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж┐ЁЯе║ ржкржЪрж╛ рждрзБржорж┐ЁЯе║",
      "ржЖржЧрзЗ ржПржХржЯрж╛ ржЧрж╛ржи ржмрж▓рзЛ, тШ╣ ржирж╛рж╣рж▓рзЗ ржХржерж╛ ржмрж▓ржмрзЛ ржирж╛ ЁЯе║", "ржмрж▓рзЛ ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рждрзЛржорж╛рж░ ржЬржирзНржп ЁЯШЪ", "ржХржерж╛ ржжрзЗржУ ржЖржорж╛ржХрзЗ ржкржЯрж╛ржмрж╛...!! ЁЯШМ", 
      "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░рзЗржЫрж┐рж╕ ржХрзЛржирзЛ ЁЯШ╛, ржЖржорж╛рж░ ржЬрж╛ржирзБ ржПрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ ЁЯШЛ", "ржЖржорж╛ржХрзЗ ржирж╛ ржжрзЗржХрзЗ ржПржХржЯрзБ ржкржбрж╝рждрзЗ ржмрж╕рждрзЗржУ рждрзЛ ржкрж╛рж░рзЛ ЁЯе║ЁЯе║", 
      "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝ ржХрж┐ржирзНрждрзБ ЁЯШСЁЯШТ", "ржУржЗ рждрзБржорж┐ single ржирж╛?ЁЯл╡ЁЯди ЁЯШСЁЯШТ", "ржмрж▓рзЛ ржЬрж╛ржирзБ ЁЯШТ", "MeowЁЯРд", "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж╛ ,рж╢рзБржиржЫрж┐ рждрзЛ ЁЯд╖ЁЯП╗тАНтЩАя╕П", 
      "ржХрж┐ рж╣рж▓рзЛ, ржорж┐рж╕ ржЯрж┐рж╕ ржХрж░ржЪрзНржЫрзЛ ржирж╛ржХрж┐ ЁЯдг", "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИ", "ржЖржЬржХрзЗ ржЖржорж╛рж░ ржоржи ржнрж╛рж▓рзЛ ржирзЗржЗ ЁЯЩЙ"
      ];
      const reply = arr ? (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(arr)}&senderID=${event.senderID}&font=1`)).data.reply : randomReplies[Math.floor(Math.random() * randomReplies.length)];
      const info = await api.sendMessage(reply, event.threadID, event.messageID);

      if (info?.messageID) {
        global.GoatBot.onReply.set(info.messageID, {
          commandName: this.config.name,
          type: "reply",
          messageID: info.messageID,
          author: event.senderID,
          reply
        });
      }
    }
  } catch (err) {
    api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);
  }
};